{"version":3,"sources":["../../app/scripts/spinner.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;AAEb,SAAS,OAAO,GAAG;;;AAGjB,MAAI,MAAM,GAAG,SAAS,CAAC;AACvB,MAAI,OAAO,GAAG,GAAG,CAAC;AAClB,MAAI,GAAG,CAAC;;AAER,WAAS,IAAI,CAAC,SAAS,EAAE;;AAEvB,QAAI,SAAS,GAAG,SAAS,CAAC;;AAE1B,aAAS,CAAC,YAAY,CAAC,OAAO,EAAE,+DAA+D,CAAC,CAAC;;AAEjG,OAAG,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE;AACtC,WAAK,EAAE,MAAM;;;AAGb,iBAAW,EAAE,CAAC;AACd,gBAAU,EAAE,CAAC;AACb,YAAM,EAAE,WAAW;AACnB,cAAQ,EAAE,IAAI;AACd,UAAI,EAAE;AACJ,0BAAkB,EAAE,KAAK;OAC1B;AACD,UAAI,EAAE;AACJ,aAAK,EAAE,MAAM;AACb,aAAK,EAAE,CAAC;OACT;AACD,QAAE,EAAE;AACF,aAAK,EAAE,SAAS;AAChB,aAAK,EAAE,CAAC;OACT;;AAED,UAAI,EAAE,cAAS,KAAK,EAAE,MAAM,EAAE;AAC5B,cAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAChD,cAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;;AAEtD,YAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC;AAC7C,gBAAQ,KAAK;AACX,eAAK,CAAC;AACJ,kBAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACnB,kBAAM;AAAA,AACR,eAAK,GAAG;AACN,kBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC5B,kBAAM;AAAA,AACR;AACE,kBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAAA,SACzB;OACF;KACF,CAAC,CAAC;AACH,OAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,kCAAkC,CAAC;;;AAG/D,OAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;GAEtB;;AAED,MAAI,CAAC,MAAM,GAAG,UAAS,KAAK,EAAE;AAC5B,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACrB,aAAO,MAAM,CAAC;KACf;AACD,UAAM,GAAG,KAAK,CAAC;AACf,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,MAAI,CAAC,OAAO,GAAG,UAAS,KAAK,EAAE;AAC7B,QAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;AAErB,aAAO,OAAO,CAAC;KAChB;AACD,WAAO,GAAG,KAAK,CAAC;AAChB,OAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrB,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,SAAO,IAAI,CAAC;CACb","file":"spinner.js","sourcesContent":["//Using Mike Bostock's Towards Reusable Charts Pattern\n'use strict';\n\nfunction Spinner() {\n\n  // All options that should be accessible to caller\n  var colour = '#FFEA82';\n  var animate = 1.0;\n  var bar;\n\n  function Line(selection) {\n\n    var container = selection;\n\n    container.setAttribute('style', 'margin: 20px; width: 150px;height: 150px; position: relative;');\n\n    bar = new ProgressBar.Circle(container, {\n      color: '#aaa',\n      // This has to be the same size as the maximum width to\n      // prevent clipping\n      strokeWidth: 4,\n      trailWidth: 1,\n      easing: 'easeInOut',\n      duration: 1400,\n      text: {\n        autoStyleContainer: false\n      },\n      from: {\n        color: '#aaa',\n        width: 1\n      },\n      to: {\n        color: '#f79f33',\n        width: 4\n      },\n      // Set default step function for all animate calls\n      step: function(state, circle) {\n        circle.path.setAttribute('stroke', state.color);\n        circle.path.setAttribute('stroke-width', state.width);\n\n        var value = Math.round(circle.value() * 100);\n        switch (value) {\n          case 0:\n            circle.setText('');\n            break;\n          case 100:\n            circle.setText('Thank You');\n            break;\n          default:\n            circle.setText(value);\n        }\n      }\n    });\n    bar.text.style.fontFamily = '\"Raleway\", Helvetica, sans-serif';\n    //bar.text.style.fontSize = '2rem';\n\n    bar.animate(animate); // Number from 0.0 to 1.0\n\n  }\n\n  Line.Colour = function(value) {\n    if (!arguments.length) {\n      return colour;\n    }\n    colour = value;\n    return Line;\n  };\n\n  Line.Animate = function(value) {\n    if (!arguments.length) {\n      //bar.animate(value);\n      return animate;\n    }\n    animate = value;\n    bar.animate(animate);\n    return Line;\n  };\n\n  return Line;\n}\n"]}